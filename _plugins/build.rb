# _plugins/build.rb
require 'time'
require 'jekyll'
require 'fileutils' # For ensuring directory exists

module Jekyll
  class ExtBuildInfoGenerator < Generator
    safe true
    priority :highest

    def generate(site)
      Jekyll.logger.info "BuildInfo:", "Plugin 'ExtBuildInfoGenerator' started."

      # Define path to version.txt in the source directory
      build_number_file_path = File.join(site.source, 'version.txt')
      current_incremental_number = 0

      # --- Read and Increment Build Number (Local Control) ---
      # This block will run both locally and in GitHub Actions.
      # In GitHub Actions, it will read the 'version.txt' that was pushed by the developer.
      # Locally, it will read, increment, and write back.
      begin
        if File.exist?(build_number_file_path)
          current_incremental_number = File.read(build_number_file_path).to_i
          Jekyll.logger.info "BuildInfo:", "Read initial build number from #{build_number_file_path}: #{current_incremental_number}"
        else
          Jekyll.logger.warn "BuildInfo:", "version.txt not found at #{build_number_file_path}. Starting build number from 0."
        end
      rescue => e
        Jekyll.logger.error "BuildInfo Error:", "Failed to read version.txt: #{e.message}. Using 0."
        current_incremental_number = 0
      end

      # Increment the build number
      current_incremental_number += 1

      # --- Write Back Build Number (Local Control) ---
      # Only write back if it's a local build process, NOT during CI.
      # In CI, we want to use the number that was already committed.
      # We can check for CI environment variables (like GITHUB_ACTIONS).
      if ENV['GITHUB_ACTIONS'].nil?
        # This code runs ONLY when NOT in GitHub Actions (i.e., locally)
        begin
          File.write(build_number_file_path, current_incremental_number.to_s)
          Jekyll.logger.info "BuildInfo:", "Incremented and persisted build number to #{build_number_file_path}: #{current_incremental_number}"
        rescue => e
          Jekyll.logger.error "BuildInfo Error:", "Failed to write version.txt: #{e.message}. Build number not persisted locally."
        end
      else
        Jekyll.logger.info "BuildInfo:", "Running in GitHub Actions. Using committed build number without incrementing/persisting locally."
        # If in GA, the number read from version.txt is the one we want to use for the build
        # We don't increment it again or write it back, as it was already incremented locally and pushed.
      end

      # The build number to use for the site is `current_incremental_number`
      build_patch_number = current_incremental_number

      # --- Get Timestamp ---
      utc_now = Time.now.utc
      cst_offset_seconds = -6 * 3600 # -6 hours for CST
      cst_time = utc_now + cst_offset_seconds
      timestamp = cst_time.strftime("%y%m%d-%H%M")
      Jekyll.logger.info "BuildInfo:", "Generated timestamp: #{timestamp} (CST)"

      # --- Generate build_info.js file ----
      build_info_js_content = <<-JS
// This file is automatically generated by Jekyll's _plugins/build.rb
// Do not edit directly.
const GLOBAL_BUILD_MAJOR = "0";
const GLOBAL_BUILD_MINOR = "1";
const GLOBAL_BUILD_PATCH = "#{build_patch_number}";
const GLOBAL_BUILD_TIMESTAMP = "#{timestamp}";
      JS

      output_dir = File.join(site.dest, 'js')
      FileUtils.mkdir_p(output_dir) unless File.directory?(output_dir)

      output_file_path = File.join(output_dir, 'buildnumber.js')

      File.write(output_file_path, build_info_js_content)
      Jekyll.logger.info "BuildInfo:", "Generated build_info.js at: #{output_file_path}"
    end
  end
end